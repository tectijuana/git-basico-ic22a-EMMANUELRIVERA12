{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "eje pandas2.7.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "rqmMjYg2q8EB"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount(\"/content/drive/\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "K0oAfRw3tM0Z",
        "outputId": "554988eb-bb12-4df7-98e8-df949cc48d2d"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive/\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv(\"/content/drive/MyDrive/google colab/data_pandas.csv\")\n",
        "df.head(50)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "_UuivF-BtelD",
        "outputId": "63a3e547-a6ad-4833-d43e-3abed4f8b667"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    id first_name       last_name       gender                      animal_fav\n",
              "0    1       Kiri           Ennew       Female          Northern elephant seal\n",
              "1    2       Ezra           Purse         Male              Asian water dragon\n",
              "2    3      Adham        Gytesham         Male   Squirrel, richardson's ground\n",
              "3    4       Zeke          Measor         Male        Lion, south american sea\n",
              "4    5     Shalna         Oxtarby       Female                           Dingo\n",
              "5    6   Langston         Medcalf         Male                     Tiger snake\n",
              "6    7    Coleman          Brunke         Male           Yellow-bellied marmot\n",
              "7    8    Raymond          Lantry  Genderfluid                  Trumpeter swan\n",
              "8    9      Tessi        Perchard       Female              Black-necked stork\n",
              "9   10     Kienan  de Tocqueville         Male           Possum, western pygmy\n",
              "10  11       Tabb          Robbie         Male          Cow, scottish highland\n",
              "11  12   Adrianne         Kemmett       Female            Silver-backed jackal\n",
              "12  13      Matti        Shearsby   Non-binary      Rabbit, eastern cottontail\n",
              "13  14      Eliza        Garlinge       Female          Bandicoot, short-nosed\n",
              "14  15    Ramonda          Abbado       Female              Lesser mouse lemur\n",
              "15  16   Courtnay           Bevis  Genderfluid                  Least chipmunk\n",
              "16  17  Simonette          Hoggan       Female                        Cape fox\n",
              "17  18      Truda           Lofty      Agender                 Moorhen, purple\n",
              "18  19    Bartram         Hengoed         Male             Yellow-billed stork\n",
              "19  20    Jillian        Gutridge       Female                          Nilgai\n",
              "20  21      Dawna           Rawet      Agender                       Fox, cape\n",
              "21  22         Bo          Loxley         Male                   Marmot, hoary\n",
              "22  23     Aarika          Calcut       Female                   Rhea, greater\n",
              "23  24   Frederic       Luckhurst         Male                    Lemur, brown\n",
              "24  25    Malvina         Simonel       Female                   Barking gecko\n",
              "25  26       Yuri        Benedick         Male  Red-winged hawk (unidentified)\n",
              "26  27    Gaylord         McVrone         Male        Four-striped grass mouse\n",
              "27  28     Aldric       Drinkhill         Male                  Macaw, scarlet\n",
              "28  29     Paloma         Clayton       Female                Armadillo, giant\n",
              "29  30   Mattheus             Bax         Male         Spurfowl, yellow-necked\n",
              "30  31     Dexter         Wildber         Male                 Crane, sandhill\n",
              "31  32       Jada            Gaye       Female             Blue and gold macaw\n",
              "32  33       Alie           Debow       Female                  Monkey, rhesus\n",
              "33  34     Janeva         Gollard       Female         Otter, african clawless\n",
              "34  35    Rosalie         Lebbern       Female                           Koala\n",
              "35  36   Merrilee       Dallaghan       Female                   Crane, brolga\n",
              "36  37     Marion           Petti       Female         Stork, greater adjutant\n",
              "37  38     Curtis       Baggarley         Male                Common nighthawk\n",
              "38  39      Camey          Yukhin         Male             Gonolek, burchell's\n",
              "39  40     Garner         Peaddie         Male               Feral rock pigeon\n",
              "40  41      Vinny         Ferreli       Female           Bandicoot, long-nosed\n",
              "41  42   Charmion          Dorney       Female                Fox, crab-eating\n",
              "42  43  Forrester            Maso         Male            Otter, cape clawless\n",
              "43  44        Bel         Inglese       Female                  Squirrel, pine\n",
              "44  45    Obadiah      Mc Carroll         Male              Monkey, red howler\n",
              "45  46    Vaughan           Heyns         Male         Scaly-breasted lorikeet\n",
              "46  47     Deeann         Lazonby       Female                  Purple moorhen\n",
              "47  48  Kendricks         Dibdale         Male                 Squirrel glider\n",
              "48  49      Tymon        Dunbabin         Male           Siskin, yellow-rumped\n",
              "49  50    Katalin          Sultan       Female                   Marine iguana"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-27f09b84-ca21-44e5-a97b-25c56f5860b8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>first_name</th>\n",
              "      <th>last_name</th>\n",
              "      <th>gender</th>\n",
              "      <th>animal_fav</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Kiri</td>\n",
              "      <td>Ennew</td>\n",
              "      <td>Female</td>\n",
              "      <td>Northern elephant seal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Ezra</td>\n",
              "      <td>Purse</td>\n",
              "      <td>Male</td>\n",
              "      <td>Asian water dragon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Adham</td>\n",
              "      <td>Gytesham</td>\n",
              "      <td>Male</td>\n",
              "      <td>Squirrel, richardson's ground</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Zeke</td>\n",
              "      <td>Measor</td>\n",
              "      <td>Male</td>\n",
              "      <td>Lion, south american sea</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Shalna</td>\n",
              "      <td>Oxtarby</td>\n",
              "      <td>Female</td>\n",
              "      <td>Dingo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Langston</td>\n",
              "      <td>Medcalf</td>\n",
              "      <td>Male</td>\n",
              "      <td>Tiger snake</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>Coleman</td>\n",
              "      <td>Brunke</td>\n",
              "      <td>Male</td>\n",
              "      <td>Yellow-bellied marmot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Raymond</td>\n",
              "      <td>Lantry</td>\n",
              "      <td>Genderfluid</td>\n",
              "      <td>Trumpeter swan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>Tessi</td>\n",
              "      <td>Perchard</td>\n",
              "      <td>Female</td>\n",
              "      <td>Black-necked stork</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Kienan</td>\n",
              "      <td>de Tocqueville</td>\n",
              "      <td>Male</td>\n",
              "      <td>Possum, western pygmy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Tabb</td>\n",
              "      <td>Robbie</td>\n",
              "      <td>Male</td>\n",
              "      <td>Cow, scottish highland</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Adrianne</td>\n",
              "      <td>Kemmett</td>\n",
              "      <td>Female</td>\n",
              "      <td>Silver-backed jackal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Matti</td>\n",
              "      <td>Shearsby</td>\n",
              "      <td>Non-binary</td>\n",
              "      <td>Rabbit, eastern cottontail</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Eliza</td>\n",
              "      <td>Garlinge</td>\n",
              "      <td>Female</td>\n",
              "      <td>Bandicoot, short-nosed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>Ramonda</td>\n",
              "      <td>Abbado</td>\n",
              "      <td>Female</td>\n",
              "      <td>Lesser mouse lemur</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>Courtnay</td>\n",
              "      <td>Bevis</td>\n",
              "      <td>Genderfluid</td>\n",
              "      <td>Least chipmunk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Simonette</td>\n",
              "      <td>Hoggan</td>\n",
              "      <td>Female</td>\n",
              "      <td>Cape fox</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>Truda</td>\n",
              "      <td>Lofty</td>\n",
              "      <td>Agender</td>\n",
              "      <td>Moorhen, purple</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>Bartram</td>\n",
              "      <td>Hengoed</td>\n",
              "      <td>Male</td>\n",
              "      <td>Yellow-billed stork</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>Jillian</td>\n",
              "      <td>Gutridge</td>\n",
              "      <td>Female</td>\n",
              "      <td>Nilgai</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>21</td>\n",
              "      <td>Dawna</td>\n",
              "      <td>Rawet</td>\n",
              "      <td>Agender</td>\n",
              "      <td>Fox, cape</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>22</td>\n",
              "      <td>Bo</td>\n",
              "      <td>Loxley</td>\n",
              "      <td>Male</td>\n",
              "      <td>Marmot, hoary</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>23</td>\n",
              "      <td>Aarika</td>\n",
              "      <td>Calcut</td>\n",
              "      <td>Female</td>\n",
              "      <td>Rhea, greater</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>24</td>\n",
              "      <td>Frederic</td>\n",
              "      <td>Luckhurst</td>\n",
              "      <td>Male</td>\n",
              "      <td>Lemur, brown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>25</td>\n",
              "      <td>Malvina</td>\n",
              "      <td>Simonel</td>\n",
              "      <td>Female</td>\n",
              "      <td>Barking gecko</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>26</td>\n",
              "      <td>Yuri</td>\n",
              "      <td>Benedick</td>\n",
              "      <td>Male</td>\n",
              "      <td>Red-winged hawk (unidentified)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>27</td>\n",
              "      <td>Gaylord</td>\n",
              "      <td>McVrone</td>\n",
              "      <td>Male</td>\n",
              "      <td>Four-striped grass mouse</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>28</td>\n",
              "      <td>Aldric</td>\n",
              "      <td>Drinkhill</td>\n",
              "      <td>Male</td>\n",
              "      <td>Macaw, scarlet</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>29</td>\n",
              "      <td>Paloma</td>\n",
              "      <td>Clayton</td>\n",
              "      <td>Female</td>\n",
              "      <td>Armadillo, giant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>30</td>\n",
              "      <td>Mattheus</td>\n",
              "      <td>Bax</td>\n",
              "      <td>Male</td>\n",
              "      <td>Spurfowl, yellow-necked</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>31</td>\n",
              "      <td>Dexter</td>\n",
              "      <td>Wildber</td>\n",
              "      <td>Male</td>\n",
              "      <td>Crane, sandhill</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>32</td>\n",
              "      <td>Jada</td>\n",
              "      <td>Gaye</td>\n",
              "      <td>Female</td>\n",
              "      <td>Blue and gold macaw</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>33</td>\n",
              "      <td>Alie</td>\n",
              "      <td>Debow</td>\n",
              "      <td>Female</td>\n",
              "      <td>Monkey, rhesus</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>34</td>\n",
              "      <td>Janeva</td>\n",
              "      <td>Gollard</td>\n",
              "      <td>Female</td>\n",
              "      <td>Otter, african clawless</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>35</td>\n",
              "      <td>Rosalie</td>\n",
              "      <td>Lebbern</td>\n",
              "      <td>Female</td>\n",
              "      <td>Koala</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>36</td>\n",
              "      <td>Merrilee</td>\n",
              "      <td>Dallaghan</td>\n",
              "      <td>Female</td>\n",
              "      <td>Crane, brolga</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>37</td>\n",
              "      <td>Marion</td>\n",
              "      <td>Petti</td>\n",
              "      <td>Female</td>\n",
              "      <td>Stork, greater adjutant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>38</td>\n",
              "      <td>Curtis</td>\n",
              "      <td>Baggarley</td>\n",
              "      <td>Male</td>\n",
              "      <td>Common nighthawk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>39</td>\n",
              "      <td>Camey</td>\n",
              "      <td>Yukhin</td>\n",
              "      <td>Male</td>\n",
              "      <td>Gonolek, burchell's</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>40</td>\n",
              "      <td>Garner</td>\n",
              "      <td>Peaddie</td>\n",
              "      <td>Male</td>\n",
              "      <td>Feral rock pigeon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>41</td>\n",
              "      <td>Vinny</td>\n",
              "      <td>Ferreli</td>\n",
              "      <td>Female</td>\n",
              "      <td>Bandicoot, long-nosed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>42</td>\n",
              "      <td>Charmion</td>\n",
              "      <td>Dorney</td>\n",
              "      <td>Female</td>\n",
              "      <td>Fox, crab-eating</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>43</td>\n",
              "      <td>Forrester</td>\n",
              "      <td>Maso</td>\n",
              "      <td>Male</td>\n",
              "      <td>Otter, cape clawless</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>44</td>\n",
              "      <td>Bel</td>\n",
              "      <td>Inglese</td>\n",
              "      <td>Female</td>\n",
              "      <td>Squirrel, pine</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>45</td>\n",
              "      <td>Obadiah</td>\n",
              "      <td>Mc Carroll</td>\n",
              "      <td>Male</td>\n",
              "      <td>Monkey, red howler</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>46</td>\n",
              "      <td>Vaughan</td>\n",
              "      <td>Heyns</td>\n",
              "      <td>Male</td>\n",
              "      <td>Scaly-breasted lorikeet</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>47</td>\n",
              "      <td>Deeann</td>\n",
              "      <td>Lazonby</td>\n",
              "      <td>Female</td>\n",
              "      <td>Purple moorhen</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>48</td>\n",
              "      <td>Kendricks</td>\n",
              "      <td>Dibdale</td>\n",
              "      <td>Male</td>\n",
              "      <td>Squirrel glider</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>49</td>\n",
              "      <td>Tymon</td>\n",
              "      <td>Dunbabin</td>\n",
              "      <td>Male</td>\n",
              "      <td>Siskin, yellow-rumped</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>50</td>\n",
              "      <td>Katalin</td>\n",
              "      <td>Sultan</td>\n",
              "      <td>Female</td>\n",
              "      <td>Marine iguana</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27f09b84-ca21-44e5-a97b-25c56f5860b8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-27f09b84-ca21-44e5-a97b-25c56f5860b8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-27f09b84-ca21-44e5-a97b-25c56f5860b8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "DATOS AL ALZAR"
      ],
      "metadata": {
        "id": "0Yy9sJAI9S3P"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.sample(3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "b3EkYIk4t1tK",
        "outputId": "52f2ff95-93e4-4530-96d0-edf2f6d338f2"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    id first_name last_name  gender                animal_fav\n",
              "26  27    Gaylord   McVrone    Male  Four-striped grass mouse\n",
              "16  17  Simonette    Hoggan  Female                  Cape fox\n",
              "49  50    Katalin    Sultan  Female             Marine iguana"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c2cb7191-0a71-4800-9154-437418c0153c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>first_name</th>\n",
              "      <th>last_name</th>\n",
              "      <th>gender</th>\n",
              "      <th>animal_fav</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>27</td>\n",
              "      <td>Gaylord</td>\n",
              "      <td>McVrone</td>\n",
              "      <td>Male</td>\n",
              "      <td>Four-striped grass mouse</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>Simonette</td>\n",
              "      <td>Hoggan</td>\n",
              "      <td>Female</td>\n",
              "      <td>Cape fox</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>50</td>\n",
              "      <td>Katalin</td>\n",
              "      <td>Sultan</td>\n",
              "      <td>Female</td>\n",
              "      <td>Marine iguana</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c2cb7191-0a71-4800-9154-437418c0153c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c2cb7191-0a71-4800-9154-437418c0153c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c2cb7191-0a71-4800-9154-437418c0153c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "ESTRACCION DE UNA CIERTA PARTE DE LA BASE DE DATOS"
      ],
      "metadata": {
        "id": "pvv82CtR90wG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df[[\"first_name\",\"gender\",\"animal_fav\"]]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "-p4B-QBu8t00",
        "outputId": "81d0920a-9c75-4f94-e340-031639f85c8f"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   first_name       gender                      animal_fav\n",
              "0        Kiri       Female          Northern elephant seal\n",
              "1        Ezra         Male              Asian water dragon\n",
              "2       Adham         Male   Squirrel, richardson's ground\n",
              "3        Zeke         Male        Lion, south american sea\n",
              "4      Shalna       Female                           Dingo\n",
              "5    Langston         Male                     Tiger snake\n",
              "6     Coleman         Male           Yellow-bellied marmot\n",
              "7     Raymond  Genderfluid                  Trumpeter swan\n",
              "8       Tessi       Female              Black-necked stork\n",
              "9      Kienan         Male           Possum, western pygmy\n",
              "10       Tabb         Male          Cow, scottish highland\n",
              "11   Adrianne       Female            Silver-backed jackal\n",
              "12      Matti   Non-binary      Rabbit, eastern cottontail\n",
              "13      Eliza       Female          Bandicoot, short-nosed\n",
              "14    Ramonda       Female              Lesser mouse lemur\n",
              "15   Courtnay  Genderfluid                  Least chipmunk\n",
              "16  Simonette       Female                        Cape fox\n",
              "17      Truda      Agender                 Moorhen, purple\n",
              "18    Bartram         Male             Yellow-billed stork\n",
              "19    Jillian       Female                          Nilgai\n",
              "20      Dawna      Agender                       Fox, cape\n",
              "21         Bo         Male                   Marmot, hoary\n",
              "22     Aarika       Female                   Rhea, greater\n",
              "23   Frederic         Male                    Lemur, brown\n",
              "24    Malvina       Female                   Barking gecko\n",
              "25       Yuri         Male  Red-winged hawk (unidentified)\n",
              "26    Gaylord         Male        Four-striped grass mouse\n",
              "27     Aldric         Male                  Macaw, scarlet\n",
              "28     Paloma       Female                Armadillo, giant\n",
              "29   Mattheus         Male         Spurfowl, yellow-necked\n",
              "30     Dexter         Male                 Crane, sandhill\n",
              "31       Jada       Female             Blue and gold macaw\n",
              "32       Alie       Female                  Monkey, rhesus\n",
              "33     Janeva       Female         Otter, african clawless\n",
              "34    Rosalie       Female                           Koala\n",
              "35   Merrilee       Female                   Crane, brolga\n",
              "36     Marion       Female         Stork, greater adjutant\n",
              "37     Curtis         Male                Common nighthawk\n",
              "38      Camey         Male             Gonolek, burchell's\n",
              "39     Garner         Male               Feral rock pigeon\n",
              "40      Vinny       Female           Bandicoot, long-nosed\n",
              "41   Charmion       Female                Fox, crab-eating\n",
              "42  Forrester         Male            Otter, cape clawless\n",
              "43        Bel       Female                  Squirrel, pine\n",
              "44    Obadiah         Male              Monkey, red howler\n",
              "45    Vaughan         Male         Scaly-breasted lorikeet\n",
              "46     Deeann       Female                  Purple moorhen\n",
              "47  Kendricks         Male                 Squirrel glider\n",
              "48      Tymon         Male           Siskin, yellow-rumped\n",
              "49    Katalin       Female                   Marine iguana"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-40df3509-8a0f-42d2-a97d-d3b7f56ced10\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>first_name</th>\n",
              "      <th>gender</th>\n",
              "      <th>animal_fav</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Kiri</td>\n",
              "      <td>Female</td>\n",
              "      <td>Northern elephant seal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Ezra</td>\n",
              "      <td>Male</td>\n",
              "      <td>Asian water dragon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Adham</td>\n",
              "      <td>Male</td>\n",
              "      <td>Squirrel, richardson's ground</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Zeke</td>\n",
              "      <td>Male</td>\n",
              "      <td>Lion, south american sea</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Shalna</td>\n",
              "      <td>Female</td>\n",
              "      <td>Dingo</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Langston</td>\n",
              "      <td>Male</td>\n",
              "      <td>Tiger snake</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Coleman</td>\n",
              "      <td>Male</td>\n",
              "      <td>Yellow-bellied marmot</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Raymond</td>\n",
              "      <td>Genderfluid</td>\n",
              "      <td>Trumpeter swan</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Tessi</td>\n",
              "      <td>Female</td>\n",
              "      <td>Black-necked stork</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Kienan</td>\n",
              "      <td>Male</td>\n",
              "      <td>Possum, western pygmy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Tabb</td>\n",
              "      <td>Male</td>\n",
              "      <td>Cow, scottish highland</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Adrianne</td>\n",
              "      <td>Female</td>\n",
              "      <td>Silver-backed jackal</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Matti</td>\n",
              "      <td>Non-binary</td>\n",
              "      <td>Rabbit, eastern cottontail</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Eliza</td>\n",
              "      <td>Female</td>\n",
              "      <td>Bandicoot, short-nosed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Ramonda</td>\n",
              "      <td>Female</td>\n",
              "      <td>Lesser mouse lemur</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Courtnay</td>\n",
              "      <td>Genderfluid</td>\n",
              "      <td>Least chipmunk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Simonette</td>\n",
              "      <td>Female</td>\n",
              "      <td>Cape fox</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Truda</td>\n",
              "      <td>Agender</td>\n",
              "      <td>Moorhen, purple</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Bartram</td>\n",
              "      <td>Male</td>\n",
              "      <td>Yellow-billed stork</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Jillian</td>\n",
              "      <td>Female</td>\n",
              "      <td>Nilgai</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Dawna</td>\n",
              "      <td>Agender</td>\n",
              "      <td>Fox, cape</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Bo</td>\n",
              "      <td>Male</td>\n",
              "      <td>Marmot, hoary</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Aarika</td>\n",
              "      <td>Female</td>\n",
              "      <td>Rhea, greater</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Frederic</td>\n",
              "      <td>Male</td>\n",
              "      <td>Lemur, brown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Malvina</td>\n",
              "      <td>Female</td>\n",
              "      <td>Barking gecko</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Yuri</td>\n",
              "      <td>Male</td>\n",
              "      <td>Red-winged hawk (unidentified)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Gaylord</td>\n",
              "      <td>Male</td>\n",
              "      <td>Four-striped grass mouse</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Aldric</td>\n",
              "      <td>Male</td>\n",
              "      <td>Macaw, scarlet</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Paloma</td>\n",
              "      <td>Female</td>\n",
              "      <td>Armadillo, giant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Mattheus</td>\n",
              "      <td>Male</td>\n",
              "      <td>Spurfowl, yellow-necked</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Dexter</td>\n",
              "      <td>Male</td>\n",
              "      <td>Crane, sandhill</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Jada</td>\n",
              "      <td>Female</td>\n",
              "      <td>Blue and gold macaw</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Alie</td>\n",
              "      <td>Female</td>\n",
              "      <td>Monkey, rhesus</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Janeva</td>\n",
              "      <td>Female</td>\n",
              "      <td>Otter, african clawless</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Rosalie</td>\n",
              "      <td>Female</td>\n",
              "      <td>Koala</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Merrilee</td>\n",
              "      <td>Female</td>\n",
              "      <td>Crane, brolga</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Marion</td>\n",
              "      <td>Female</td>\n",
              "      <td>Stork, greater adjutant</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>Curtis</td>\n",
              "      <td>Male</td>\n",
              "      <td>Common nighthawk</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Camey</td>\n",
              "      <td>Male</td>\n",
              "      <td>Gonolek, burchell's</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>Garner</td>\n",
              "      <td>Male</td>\n",
              "      <td>Feral rock pigeon</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Vinny</td>\n",
              "      <td>Female</td>\n",
              "      <td>Bandicoot, long-nosed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Charmion</td>\n",
              "      <td>Female</td>\n",
              "      <td>Fox, crab-eating</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Forrester</td>\n",
              "      <td>Male</td>\n",
              "      <td>Otter, cape clawless</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>Bel</td>\n",
              "      <td>Female</td>\n",
              "      <td>Squirrel, pine</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>Obadiah</td>\n",
              "      <td>Male</td>\n",
              "      <td>Monkey, red howler</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Vaughan</td>\n",
              "      <td>Male</td>\n",
              "      <td>Scaly-breasted lorikeet</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Deeann</td>\n",
              "      <td>Female</td>\n",
              "      <td>Purple moorhen</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>Kendricks</td>\n",
              "      <td>Male</td>\n",
              "      <td>Squirrel glider</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Tymon</td>\n",
              "      <td>Male</td>\n",
              "      <td>Siskin, yellow-rumped</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Katalin</td>\n",
              "      <td>Female</td>\n",
              "      <td>Marine iguana</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-40df3509-8a0f-42d2-a97d-d3b7f56ced10')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-40df3509-8a0f-42d2-a97d-d3b7f56ced10 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-40df3509-8a0f-42d2-a97d-d3b7f56ced10');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"Nombre_completo\"] = df[\"first_name\"] + \" \" + df[\"last_name\"]"
      ],
      "metadata": {
        "id": "J9_kEpuf-BXc"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "_AriCEW2ZSAw",
        "outputId": "53051bcd-09b2-41d9-921f-4091387f36ec"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   id first_name last_name  gender                     animal_fav  \\\n",
              "0   1       Kiri     Ennew  Female         Northern elephant seal   \n",
              "1   2       Ezra     Purse    Male             Asian water dragon   \n",
              "2   3      Adham  Gytesham    Male  Squirrel, richardson's ground   \n",
              "3   4       Zeke    Measor    Male       Lion, south american sea   \n",
              "4   5     Shalna   Oxtarby  Female                          Dingo   \n",
              "\n",
              "  Nombre_completo  \n",
              "0      Kiri Ennew  \n",
              "1      Ezra Purse  \n",
              "2  Adham Gytesham  \n",
              "3     Zeke Measor  \n",
              "4  Shalna Oxtarby  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ef342687-6324-43ab-ae8c-8853cb39faa1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>first_name</th>\n",
              "      <th>last_name</th>\n",
              "      <th>gender</th>\n",
              "      <th>animal_fav</th>\n",
              "      <th>Nombre_completo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Kiri</td>\n",
              "      <td>Ennew</td>\n",
              "      <td>Female</td>\n",
              "      <td>Northern elephant seal</td>\n",
              "      <td>Kiri Ennew</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Ezra</td>\n",
              "      <td>Purse</td>\n",
              "      <td>Male</td>\n",
              "      <td>Asian water dragon</td>\n",
              "      <td>Ezra Purse</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Adham</td>\n",
              "      <td>Gytesham</td>\n",
              "      <td>Male</td>\n",
              "      <td>Squirrel, richardson's ground</td>\n",
              "      <td>Adham Gytesham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Zeke</td>\n",
              "      <td>Measor</td>\n",
              "      <td>Male</td>\n",
              "      <td>Lion, south american sea</td>\n",
              "      <td>Zeke Measor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Shalna</td>\n",
              "      <td>Oxtarby</td>\n",
              "      <td>Female</td>\n",
              "      <td>Dingo</td>\n",
              "      <td>Shalna Oxtarby</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef342687-6324-43ab-ae8c-8853cb39faa1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ef342687-6324-43ab-ae8c-8853cb39faa1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ef342687-6324-43ab-ae8c-8853cb39faa1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby('gender').size()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "555A4o2-ZWCP",
        "outputId": "7dee2f8b-3bb8-4d29-da90-9cef5bbb3b18"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "gender\n",
              "Agender         2\n",
              "Female         22\n",
              "Genderfluid     2\n",
              "Male           23\n",
              "Non-binary      1\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.groupby('gender').count()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "AvSkbrwlg5qD",
        "outputId": "0d5b9292-217f-4695-99c8-c3e5d699763f"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             id  first_name  last_name  animal_fav  Nombre_completo\n",
              "gender                                                             \n",
              "Agender       2           2          2           2                2\n",
              "Female       22          22         22          22               22\n",
              "Genderfluid   2           2          2           2                2\n",
              "Male         23          23         23          23               23\n",
              "Non-binary    1           1          1           1                1"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-aee5040b-6ff6-4f4d-af37-80cbd816206c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>first_name</th>\n",
              "      <th>last_name</th>\n",
              "      <th>animal_fav</th>\n",
              "      <th>Nombre_completo</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>gender</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Agender</th>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Female</th>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "      <td>22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genderfluid</th>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Male</th>\n",
              "      <td>23</td>\n",
              "      <td>23</td>\n",
              "      <td>23</td>\n",
              "      <td>23</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Non-binary</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aee5040b-6ff6-4f4d-af37-80cbd816206c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-aee5040b-6ff6-4f4d-af37-80cbd816206c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-aee5040b-6ff6-4f4d-af37-80cbd816206c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#GRAFICA DE PASTEL"
      ],
      "metadata": {
        "id": "c1tWbtU3nrjx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "y =[2, 22, 2, 23, 1]\n",
        "mylabels = [\"Agender\", \"Female\", \"Genderfluid\", \"Male\", \"Non-binary\"]\n",
        "plt.figure(figsize=(10,10))\n",
        "plt.title('PORCENTAJE DE TIPO DE GENERO')\n",
        "plt.pie(y, labels = mylabels)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 591
        },
        "id": "rBcSdzjva7vy",
        "outputId": "6434593a-5c9a-42a1-9740-878f3291d521"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "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voXTFTyPZFL9Y6ZdXg286HQnas94LjOzXjN7C8nBB/+wUNs+Ra8H/sTMXmNmi8xsqZm9HbgQeOvJHmxm9Wa2wcw+ADxhLo+ZqTBn6rXAW8zszwoZzMy2kBzZOm/ufi1wO6dRnN39apLdp68oXPUekqM4/8fMugvv8xeSlLy/LbyHReQ4VLxEFlDhkPwXkxz5dRD4BdAKXOTuB0/w0PcCv2tmj3b3L5OcQuBlJB94+4G3k5zq4KgLZzkP03nHbhaAfyI5avJknkWyW+lThaPV9hWOyvw40AA8dfpLnfbnv5uR40S7mlaZ2SjJUXE/AnYAT3D3/5txv5/M2OZ755D/lLn7DcDvkIw27SU50OEs4OKTHE14YeH1HCE5mGExcJ67/2zG/Q7PeD1/c5wcXyApv39MMnp0gGTS+kd55OT/58/y8+88TsY3ceycszlnKngXyc+5ufA+vhhoIXl/HyT5ZeHFxztNhog8zPTLiYjMlZk9GvjuLOeNEhGROdCIl4jMSWFOz/NITlUhIiKnYMHmbIhI1XuA5FQHl4QOIiJSqbSrUURERKREtKtRREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLREREpERUvERERERKRMVLpEaZWc7Mbpt2WV/E57rPzFYUa/siIpWiIXQAEQlmwt0fEzqEiEgt0YiXiPyamZ1jZteZ2S1mdpWZ9RSuv9bM3mNmN5tZv5mdZ2a7zewuM3v7tMd/pfDYn5vZK47zHH9sZjcVRtn+y8zqS/X6RERCU/ESqV2t03YzXmZmjcAHgOe4+znAx4F/nnb/tLufC3wEuBx4FXAG8FIzW164z8sKjz0XeM206wEwsz7g+cBFhdG2HPBHRXyNIiJlRbsaRWrXI3Y1mtkZJEXqajMDqAf2Trv/Vwtffwb83N33Fh73S2ANcJCkbP1B4X5rgC2F64/6LeAc4EeF52gF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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#GRAFICA DE BARRAS"
      ],
      "metadata": {
        "id": "RY-ooFcso5Xm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "Generos = [\"Agender\", \"Female\", \"Genderfluid\", \"Male\", \"Non-binary\"]\n",
        "Cantidad = [2, 22, 2, 23, 1]\n",
        "plt.bar(Generos, Cantidad)\n",
        "plt.title('TIPOS DE GENEROS')\n",
        "plt.xlabel('GENEROS')\n",
        "plt.ylabel('CANTIDAD DE GENEROS')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "oZKB0TsWes__",
        "outputId": "6d91562f-1a9c-4345-e5b1-75c05a4b0801"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop([\"id\"], axis=1)"
      ],
      "metadata": {
        "id": "12LKXQ5Vo9l-"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "NegZd-PVyISb",
        "outputId": "86139703-c463-404b-a0ea-f57f8710a69a"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  first_name last_name  gender                     animal_fav Nombre_completo\n",
              "0       Kiri     Ennew  Female         Northern elephant seal      Kiri Ennew\n",
              "1       Ezra     Purse    Male             Asian water dragon      Ezra Purse\n",
              "2      Adham  Gytesham    Male  Squirrel, richardson's ground  Adham Gytesham\n",
              "3       Zeke    Measor    Male       Lion, south american sea     Zeke Measor\n",
              "4     Shalna   Oxtarby  Female                          Dingo  Shalna Oxtarby"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bdc17aeb-5410-468c-ba22-8a8fce9de50a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>first_name</th>\n",
              "      <th>last_name</th>\n",
              "      <th>gender</th>\n",
              "      <th>animal_fav</th>\n",
              "      <th>Nombre_completo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Kiri</td>\n",
              "      <td>Ennew</td>\n",
              "      <td>Female</td>\n",
              "      <td>Northern elephant seal</td>\n",
              "      <td>Kiri Ennew</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Ezra</td>\n",
              "      <td>Purse</td>\n",
              "      <td>Male</td>\n",
              "      <td>Asian water dragon</td>\n",
              "      <td>Ezra Purse</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Adham</td>\n",
              "      <td>Gytesham</td>\n",
              "      <td>Male</td>\n",
              "      <td>Squirrel, richardson's ground</td>\n",
              "      <td>Adham Gytesham</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Zeke</td>\n",
              "      <td>Measor</td>\n",
              "      <td>Male</td>\n",
              "      <td>Lion, south american sea</td>\n",
              "      <td>Zeke Measor</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Shalna</td>\n",
              "      <td>Oxtarby</td>\n",
              "      <td>Female</td>\n",
              "      <td>Dingo</td>\n",
              "      <td>Shalna Oxtarby</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdc17aeb-5410-468c-ba22-8a8fce9de50a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bdc17aeb-5410-468c-ba22-8a8fce9de50a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bdc17aeb-5410-468c-ba22-8a8fce9de50a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    }
  ]
}
